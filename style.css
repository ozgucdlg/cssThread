.container {
    width: 70%;
    margin: 0 auto;

}

.box {
    width: 100px;
    height: 100px;
    background: red;
    cursor: pointer;
    margin-top: 30px;
    transition-property: all;
    transition-duration: 3s;
    transition-timing-function: ease-in-out;    
    transition-delay: 3s;
    /* 
    transition: width 2s ease 3s ;   this is basically shortcut coding style
    */

    /* -webkit-   kullanilirsa  =>{ web tarayicilari ile alakalidir
    -moz- modzilla   etc}*/ 

}
.box:hover {
    width: 300px;
    height: 300px;
    background: yellow;
}


/*  */ 
.imageArea {
    position: relative;
    width: 400px;
    height: 200px;
}

.imageTitle {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    cursor: pointer; /* uzerone gelme ozelligi aktif edildi*/
    text-align: center;
    opacity: 0;
    transition:opacity  1s ease;
    
}

.imageTitle h2{  /* uzerone gelme ozelligi uygulandiginds okiusacak islemler */ 
    background-color: rgba(231,76,60, 1);
    color: #fff;

}
.imageTitle:hover{
    opacity: 0.8;
    

}

/*      transform : fonksion (parametre)*/ 


.ImageField{
    width: 400px;
    height: 200px;
    margin-top: 50px;
}
.ImageField:hover{
    transform: translate(40px, 40px);  /* fonksionun istedigimiz eksende hareket ettirmek icin 
    sadece translate sonua X,y gibi ifadeler getiririz*/
    transform: scale(.5, .5); /* secilen kismlarda genislik ve yukseklik olarak olcekleme yapar */

    transform:rotate(-30deg);
    /* transform-origin: ; bu ozellik ile dondurecegimiz yonu belirleyebiliriz */
    transform:skew(); /* egim vermeye yarar*/
    transform:matrix(scaleX(),skewY(),skewX(),translateX(),translateY()); /* icine 6 adet parametre alir ve hepsinin birlesimi olarak verir */
}


.germanShepard{
    margin-top:100px; 
    margin-left: 100px;
    background: #f5f5f5;
    width: 200px; 
    height:200px;
    border-radius: 100px;
    box-shadow: 3px 3px 6px rgba(0,0,0, 0.8);
}

.germanShepard img{
    border-radius: 20px;
    transition:all 1s;
}
img:hover{
    transform: translateX(600px)  rotate(360deg);
    

}

.bucket{
    position: relative;
    margin-top: 100px;
    transform-style: preserve-3d;
    transform:rotateX(-20deg)
    rotateY(-40deg) perspective(200px);

}

.bucket1, .bucket2, .bucket3 {
    position: absolute;
    width:200px;
    height:200px;
}

.bucket1{
    background: red;
    transform:translateZ(0px)
    translateY(50px)
    translateX(100px);

}
.bucket2{
    background: yellow;
    transform:translateZ(-100px);

}

.bucket3{
    background: black;
    transform:translateZ(-200px);

}

.animation{
    position: relative;    
    top:225px;
    left:50px;
    width:100px; 
    height:100px;
    background:red;       
    
    /* keyframe i baslatmak icin gecerli olan ilk adim isimlendirme*/
    animation-name: changeColor;
    /* animasyoun suresi belirlenir */
    animation-duration:6s;
    /* animasyonaun baslama gecikmasei ayarlanir*/
    animation-delay: 3s;
    /*animasyonun tekrar etme sayisi icin yazilir cycle, sonsuz olmasi icin infinite yazilir*/ 
    animation-iteration-count: 2;

    /* animasyon ters calismiasi yon olarak saglar //   alternate secilirse bir duz bir ters calisir*/
    animation-direction: reverse;
}

/* 2. adim keyframe koyarak renk yada konum parametreleri olusturulur*/
@keyframes changeColor {
  /*  0%  {background-color: red;}
   25% {background-color: orange;}
   50% {background-color:blue;}
   75% {background-color:yellow;}
   100% {background-color: brown;} 
   bu ozellikler sadece renk degisimi icindir bununla beraber konum degisiminide saglayabiliriz*/

   0%  {background-color: red;  left:50px; top:225px;}
   25% {background-color: orange; left:200px; top:225px;}
   50% {background-color:blue;   left:200px; top:425px;}
   75% {background-color:yellow;   left:50px; top:425px;}
   100% {background-color: brown;   left:50px; top:225px;}
}



